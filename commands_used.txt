## install helm ##
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh

## install sealed-secrets helm chart ##
helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
helm install sealed-secrets sealed-secrets/sealed-secrets


## install kubeseal to encrypt your secrets ##
KUBESEAL_VERSION='0.23.0'
wget "https://github.com/bitnami-labs/sealed-secrets/releases/download/v${KUBESEAL_VERSION:?}/kubeseal-${KUBESEAL_VERSION:?}-linux-amd64.tar.gz"
tar -xvzf kubeseal-${KUBESEAL_VERSION:?}-linux-amd64.tar.gz kubeseal
sudo install -m 755 kubeseal /usr/local/bin/kubeseal

## create a secret ##
kubectl create secret generic database -n default --from-literal=DB_PASSWORD=password123 --dry-run=client -o yaml > secret.yml

## encrypt secret file using kubeseal ##
kubeseal --controller-name=sealed-secrets --controller-namespace=default --format yaml < secret.yml > sealed-secret.yml

## Now u need to upload sealed-secret.yml file in to an scm, as its encrypted its secure

## When we apply sealed-secret.yml it will create a secret normally its encoded

## still we can decode the secret created in cluster, so we need to fine-grain the access to connect the kubernettes cluster

## to check the sealed-secret
kubectl get sealedsecret
